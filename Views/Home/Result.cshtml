@model System.Tuple<dynamic, string>
@{
    ViewData["Title"] = "Home Page";
}

<link rel="stylesheet" href="~/css/handsontable.min.css" />
@section Scripts {
<script src="~/js/handsontable.min.js"></script>
<script src="https://www.gstatic.com/charts/loader.js"></script>
}
<style>
    .handsontable .htDimmed {
        white-space: nowrap;
        word-wrap: break-word;
        max-width: 200px;
    }
    #handsonTableConatiner {
        min-height:84vh; float:left;
    }
    #piechart{
        height: 500px; float:left;
    }
    .row { margin : 0 !important;}
</style>
<div class="row">
    <div><h3> &quot;@this.Model.Item2&quot;의 결과입니다.</h3></div>
    <div id="handsonTableConatiner">
        <div id="hot"></div>
    </div>
    <div id="piechart"></div>
</div>
<script>
var dataObject = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(this.Model.Item1))
var hotElement = document.querySelector('#hot');
var hotSettings = {
  data: dataObject,
  autoRowWarp : true,
  width: window.innerWidth* 0.75,
  height : $("#handsonTableConatiner").height(),
  fixedRowsTop: 1,
  rowHeaders: true,
  colHeaders: true,
  manualRowMove: true,
  manualColumnMove: true,
  manualRowMove: true,
  manualRowResize: true,
  manualColumnResize: true,
  contextMenu: false,
  readOnly : true, 
  afterOnCellMouseDown : function (event, coords, TD, wt) {
        var data = hot.getDataAtCol(coords.col);
        var title = data[0];
        data.splice(0, 1);

        var contents = data.reduce(function(p, c) {
            var name = c;
            if(name == null)
                return p;
            if (!p.hasOwnProperty(name)) {
                p[name] = 0;
            }
            p[name]++;
            return p;
        }, {});

        if (Object.keys(contents).length < 10)
        {
           var countsExtended = Object.keys(contents).map(function(k) {return [k, contents[k]]; });
           countsExtended.splice(0, 0, ['Task', '']);
           var data = google.visualization.arrayToDataTable(countsExtended);
           drawChart(data, title);
        }
   }
};

google.charts.load('current', {'packages':['corechart']});
google.charts.setOnLoadCallback(drawChart);


function drawChart(data, title) {
    var options = {
        title: title
    };

    if(data == null) {
         return;
    }
    $('#piechart').width(window.innerWidth * 0.23);
    var chart = new google.visualization.PieChart(document.getElementById('piechart'));
    chart.draw(data, options);
}

var hot = new Handsontable(hotElement, hotSettings);

$(document).ready(function(){
    $("#bodyContents").removeClass("container");
    $("#bodyContents").addClass("container-fluid");
    $("#hot-display-license-info").hide();
});


function resizeScreen() {
    hot.updateSettings({
        width: window.innerWidth * 0.75,
        height : $("#handsonTableConatiner").height()
    });
    $('#piechart').width(window.innerWidth * 0.23);
}

$(function(){
    $(window).resize( resizeScreen );
    resizeScreen();
});
</script>