@model System.Tuple<object, object, object, object, object>
@{
    ViewData["Title"] = "Home Page";
}

@section Scripts {
<environment include="Development">
    <script src="~/js/vue.min.js"></script>
</environment>
<environment include="Production">    
    <script src="~/js/vue.min.js"></script>
</environment>
}

<div id="container" style="display:none"> 
    <table class="table">
        <tr>
            <td>
                <div class="form-inline">
                    <div class="form-group">
                        <select class="form-control" v-model="searchData.channelid" :on-change="search" >
                            <option v-for="(service, index) in services" :value="service.ChannelID">{{service.Desript}}</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <input class="form-control" id="startDate" placeholder="시작일" v-model="searchData.startdate">
                            ~ <input placeholder="종료일" id="endDate" class="form-control" v-model="searchData.enddate">
                    </div>
                    <div class="form-group">
                        <input type="text" class="form-control" v-model="searchData.title" style="width: 350px !important;" placeholder="Search...">
                    </div>
                    <div class="form-group">
                        <button v-on:click=search class="btn btn-info"><span class="glyphicon glyphicon-search"></span> 검색</button>
                    </div>
                </div>
            </td>
        </tr>
    </table>
    <div style="margin-bottom:15px"><button class="btn btn-success" v-on:click="createSurvey">설문등록</button></div>
    <table class="table table-bordered table-hover">
        <colgroup>
            <col width="10%"/>
            <col width="30%"/>
            <col width="20%"/>
            <col width="10%"/>
            <col width="10%"/>
            <col width="10%"/>
            <col width="15%"/>
        </colgroup>
        <thead>
            <tr class="info">
                <th>NO</th>
                <th>설문제목</th>
                <th>기간</th>
                <th>참여인원</th>
                <th>결과</th>
                <th>삭제</th>
                <th>URL복사</th>
            </tr>
        </thead>
        <tr v-for="(s, index) in surveys">
            <td class="text-right">{{((pager.PageIndex - 1) * 10) + index + 1}}</td>
            <td><a :href="editActionUrl(s._id, s.channelID)">{{s.title}}</a></td>
            <td>{{s.startDateAndEndDate}}</td>
            <td>{{s.limitPersonsStr}}</td>
            <td class="text-center"><a v-on:click="resultPageRedirect(s._id)" href="#" >결과보기</a> </td>
            <td class="text-center"><button class="btn btn-danger" v-on:click="deletesurvey(s._id)" >삭제</button> </td>
            <td class="text-center"><button class="btn btn-info" v-on:click="copy_to_clipboard(s._id)" >복사</button> </td>
        </tr>     
    </table>
    <center>
    <ul class="pagination text-center">
        <li v-if="pager.First != null"><a :href="createActionUrl(pager.First)"> &lt;&lt;</a></li>
        <li v-if="pager.Prev != null"><a :href="createActionUrl(pager.Prev)"> &lt; </a></li>
        <li v-for="page in pager.Pages" :class="{active : pager.PageIndex == page }"><a :href="createActionUrl(page)">{{page}}</a></li>
        <li v-if="pager.Next != null"><a :href="createActionUrl(pager.Next)"> &gt; </a></li>
        <li v-if="pager.Last != null"><a :href="createActionUrl(pager.Last)"> &gt;&gt; </a></li>
    </ul>
    </center>
    <!-- {{surveys}} -->
</div>

<script type="text/javascript">
var vue = new Vue({
    el: '#container',
    data: {
        surveys : @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(this.Model.Item1)),
        pager : @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(this.Model.Item2)),
        searchData : @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(this.Model.Item3)),
        services : @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(this.Model.Item4))
    },
    watch:{
      'searchData.channelid'  : function (val, oldval) {
        this.search();   
      }
    },
    mounted : function(){
        $("#container").show();
        
        $("#startDate").datepicker({
            dateFormat: "yy-mm-dd",
             onSelect: function(dateText) { 
                vue.searchData.startdate = dateText;
            }
        });

        $("#endDate").datepicker({
            dateFormat: "yy-mm-dd",
            onSelect: function(dateText) { 
                vue.searchData.enddate = dateText;
            }
        });
    }, 
    methods : {
        resultPageRedirect : function(UBSurveyID) {
            location.href = '@Url.Action("result", "home")/?UBSurveyID=' + UBSurveyID; 
        },
        copy_to_clipboard : function(UBSurveyID) {
            var d = '@(this.Model.Item5 + Url.Action("index", "home"))/?UBSurveyID=' + UBSurveyID;
            if(this.is_ie()) {
                window.clipboardData.setData("Text", d);
                alert("복사되었습니다.");
                return;
            }
            prompt("Ctrl+C를 눌러 복사하세요.", d);
        },
        is_ie : function(){
            console.log(navigator.userAgent);
            if(navigator.userAgent.toLowerCase().indexOf("chrome") != -1) return false;
            if(navigator.userAgent.toLowerCase().indexOf("msie") != -1) return true;
            if(navigator.userAgent.toLowerCase().indexOf("windows nt") != -1) return true;
            return false;
        },
        createSurvey : function(){
            location.href = '@Url.Action("edit", "home")/?channelID=' + this.searchData.channelid;
        },
        search : function(){
            var params = $.param(this.searchData);
            var actionUrl = '@Url.Action("List", "Home")';
            console.log(params);
            if (params == '') {
                actionUrl = '/?pageindex=' + vue.pager.PageIndex;
            }else{
                actionUrl = '/?' + params + '&pageindex=' + vue.pager.PageIndex;
            }

            location.href = actionUrl;
        },
        editActionUrl : function(_id, channelID){
             return '@Url.Action("edit", "home")/?ubsurveyid=' + _id + '&channelID=' + channelID;
        },
        createActionUrl : function(pid){
            var params = $.param(this.searchData);
            return '/?' + params + '&pageindex=' + pid;
        },
        deletesurvey : function(_id){
            if(!confirm('해당 설문을 삭제 하시겠습니까?')){
                return;
            }

            $.ajax({
                type : 'POST',
                url : '/api/UBSurvey/delete',
                contentType: 'application/json',
                data : JSON.stringify({id : _id}),
                success : function (res) {
                    if(res.success){
                        vue.search();
                    }
                }, 
                error: function(XMLHttpRequest, textStatus, errorThrown) { 
                    console.log("Status: " + textStatus +  "Error: " + errorThrown);
                }   
            });
        }
    }
})


</script>